"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[67453],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={description:"TUTORIALS - To Do List App"},i="Add New Items",l={unversionedId:"tutorials/todo-list-app/adding-new-items",id:"tutorials/todo-list-app/adding-new-items",title:"Add New Items",description:"TUTORIALS - To Do List App",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/tutorials/todo-list-app/adding-new-items.md",sourceDirName:"tutorials/todo-list-app",slug:"/tutorials/todo-list-app/adding-new-items",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/adding-new-items",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/tutorials/todo-list-app/adding-new-items.md",tags:[],version:"current",frontMatter:{description:"TUTORIALS - To Do List App"},sidebar:"documentationSidebar",previous:{title:"Add a Data Context",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/add-a-data-context"},next:{title:"Navigate Views",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/navigate-views"}},s={},p=[{value:"Create a New View",id:"create-a-new-view",level:2},{value:"Create the View Model",id:"create-the-view-model",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-new-items"},"Add New Items"),(0,o.kt)("p",null,"When you created the ",(0,o.kt)("inlineCode",{parentName:"p"},"ToDoListView")," user control earlier in this tutorial, you added a button so that the user can add a new item. On this page you will add an action to the button."," "),(0,o.kt)("p",null,"When the user clicks the button, you want the application to show a new view that will allow the user to enter the description of a new item."),(0,o.kt)("h2",{id:"create-a-new-view"},"Create a New View"),(0,o.kt)("p",null,"To create the new view, follow this procedure if you are using Visual Studio:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the ",(0,o.kt)("strong",{parentName:"li"},"Solution Explorer")," locate and right-click the ",(0,o.kt)("strong",{parentName:"li"},"Views")," folder."," "),(0,o.kt)("li",{parentName:"ul"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Add")),(0,o.kt)("li",{parentName:"ul"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Avalonia")," under ",(0,o.kt)("strong",{parentName:"li"},"C# Items")," and then click ",(0,o.kt)("strong",{parentName:"li"},"User Control (Avalonia)")),(0,o.kt)("li",{parentName:"ul"},"In ",(0,o.kt)("strong",{parentName:"li"},"Name")," enter 'AddItemView'"," "),(0,o.kt)("li",{parentName:"ul"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Add")," "),(0,o.kt)("li",{parentName:"ul"},"Alter the XAML to match the following:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<UserControl xmlns="https://github.com/avaloniaui"\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n             mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="450"\n             x:Class="ToDoList.Views.AddItemView">\n  <DockPanel>\n    <Button DockPanel.Dock="Bottom" \n            HorizontalAlignment="Stretch"\n            HorizontalContentAlignment="Center">Cancel</Button>\n    <Button DockPanel.Dock="Bottom" \n            HorizontalAlignment="Stretch"\n            HorizontalContentAlignment="Center">OK</Button>\n    <TextBox AcceptsReturn="True"\n             Text="{Binding Description}"\n             Watermark="Enter your to do item"/>\n  </DockPanel>\n</UserControl>\n')),(0,o.kt)("p",null,"This gives you a view which looks like this:"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:"/img/gitbook-import/assets/image (44).png",alt:""})),(0,o.kt)("p",null,"The new view has a text box control which has three properties for you to review:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AcceptsReturn")," creates a multi-line text box."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Text")," binds the text that is displayed in the text box to the ",(0,o.kt)("inlineCode",{parentName:"li"},"Description")," property on a view model (that you have not created yet)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Watermark")," causes a placeholder to be displayed when the text box is empty.")),(0,o.kt)("h2",{id:"create-the-view-model"},"Create the View Model"),(0,o.kt)("p",null,"So far, you have only bound a description property. So the corresponding view model can be simple to start with."),(0,o.kt)("p",null,"To create a view model for the new view, follow this procedure:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the ",(0,o.kt)("strong",{parentName:"li"},"Solution Explorer")," locate and right-click the ",(0,o.kt)("strong",{parentName:"li"},"ViewModels")," folder."," "),(0,o.kt)("li",{parentName:"ul"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Add"),", then ",(0,o.kt)("strong",{parentName:"li"},"Class"),"."," "),(0,o.kt)("li",{parentName:"ul"},"Name the class 'AddItemViewModel'. Click ",(0,o.kt)("strong",{parentName:"li"},"Add"),"."),(0,o.kt)("li",{parentName:"ul"},"Add the description property as shown:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\n\nnamespace ToDoList.ViewModels\n{\n    public class AddItemViewModel : ViewModelBase\n    {\n        public string Description { get; set; } = String.Empty;\n    }\n}\n")),(0,o.kt)("p",null,"On the next page you will learn how to change the view in the main window to display the new item view in place of the to do list view."))}u.isMDXComponent=!0}}]);