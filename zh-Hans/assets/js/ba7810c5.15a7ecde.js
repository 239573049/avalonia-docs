"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[76686],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(r),g=o,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||l;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,i=new Array(l);i[0]=g;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},42362:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const l={description:"REFERENCE - Gestures"},i="PullGestureRecognizer",a={unversionedId:"reference/gestures/pullgesturerecognizer",id:"reference/gestures/pullgesturerecognizer",title:"PullGestureRecognizer",description:"REFERENCE - Gestures",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/reference/gestures/pullgesturerecognizer.md",sourceDirName:"reference/gestures",slug:"/reference/gestures/pullgesturerecognizer",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/pullgesturerecognizer",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/gestures/pullgesturerecognizer.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Gestures"},sidebar:"documentationSidebar",previous:{title:"PinchGestureRecognizer",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/pinchgesturerecognizer"},next:{title:"ScrollGestureRecognizer",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/scrollgesturerecognizer"}},s={},u=[{value:"Using a PullGestureRecognizer",id:"using-a-pullgesturerecognizer",level:2},{value:"PullDirection",id:"pulldirection",level:3},{value:"Useful Properties ",id:"useful-properties-",level:2},{value:"More Information",id:"more-information",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pullgesturerecognizer"},"PullGestureRecognizer"),(0,o.kt)("p",null,"A gesture recognizer that tracks a pull gesture. A pull gesture occurs when a pointer is dragged from the edge of a control. The direction of the pull is defined by the ",(0,o.kt)("inlineCode",{parentName:"p"},"PullDirection")," property."),(0,o.kt)("h2",{id:"using-a-pullgesturerecognizer"},"Using a PullGestureRecognizer"),(0,o.kt)("p",null,"A PullGestureRecognizer can be attached to a control using the control's ",(0,o.kt)("inlineCode",{parentName:"p"},"GestureRecognizers")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Border Width="500"\n        Height="500"\n        Margin="5"\n        Name="border">\n  <Border.GestureRecognizers>\n    <PullGestureRecognizer PullDirection="TopToBottom"/>\n  </Border.GestureRecognizers>\n</Border>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C#'",title:"'C#'"},"border.GestureRecognizers.Add(new PullGestureRecognizer()\n            {\n                PullDirection = PullDirection.TopToBottom,\n            });\n")),(0,o.kt)("p",null,"The PullGestureRegonizer raises a ",(0,o.kt)("inlineCode",{parentName:"p"},"Gestures.PullGestureEvent")," when it detects the start of a pull gesture. When the pull ends, from the pointer being released or another gesture start, it raises a ",(0,o.kt)("inlineCode",{parentName:"p"},"Gestures.PullGestureEndedEvent"),"."),(0,o.kt)("h3",{id:"pulldirection"},"PullDirection"),(0,o.kt)("p",null,"This defines the direction of the pull. There are 4 available values;"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PullDirection.TopToBottom")," : Pull starts from the top edge and moves towards the buttom"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PullDirection.BottomToTop")," : Pull starts from the bottom edge and moves towards the top"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PullDirection.LeftToRight")," : Pull starts from the left edge and moves towards the right"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PullDirection.RightToLeft")," : Pull starts from the right edge and moves towards the top")),(0,o.kt)("h2",{id:"useful-properties-"},"Useful Properties"," "),(0,o.kt)("p",null,"You will probably use these properties most often:"),(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{width:"266"},"Property"),(0,o.kt)("th",null,"Description"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"PullDirection"),(0,o.kt)("td",null,"Defines the direction of the pull gesture. ")))),(0,o.kt)("h2",{id:"more-information"},"More Information"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"View the source code on ",(0,o.kt)("em",{parentName:"p"},"GitHub")," "),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/GestureRecognizers/PullGestureRecognizer.cs"},(0,o.kt)("inlineCode",{parentName:"a"},"PullGestureRecognizer.cs"))),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/PullGestureEventArgs.cs"},(0,o.kt)("inlineCode",{parentName:"a"},"PullGestureEventArgs.cs")))))}d.isMDXComponent=!0}}]);