"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[64119],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(v,i(i({ref:t},u),{},{components:n})):a.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={id:"add-data-persistence",title:"Add Data Persistence"},i=void 0,s={unversionedId:"tutorials/music-store-app/add-data-persistence",id:"version-0.10.x/tutorials/music-store-app/add-data-persistence",title:"Add Data Persistence",description:"Persisting Music Collection",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/tutorials/music-store-app/add-data-persistence.md",sourceDirName:"tutorials/music-store-app",slug:"/tutorials/music-store-app/add-data-persistence",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/music-store-app/add-data-persistence",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/tutorials/music-store-app/add-data-persistence.md",tags:[],version:"0.10.x",frontMatter:{id:"add-data-persistence",title:"Add Data Persistence"},sidebar:"documentationSidebar",previous:{title:"Add Items to User Collection",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/music-store-app/add-items-to-users-collection"},next:{title:"Load data at Startup",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/music-store-app/load-data-at-startup"}},l={},c=[{value:"Persisting Music Collection",id:"persisting-music-collection",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"persisting-music-collection"},"Persisting Music Collection"),(0,r.kt)("p",null,"Persistence is the job of the business logic ","(",(0,r.kt)("inlineCode",{parentName:"p"},"model"),")"," code. However here we will see it's very simple to wire this up to the UI."),(0,r.kt)("p",null,"Add the following method to ",(0,r.kt)("inlineCode",{parentName:"p"},"AlbumViewModel")," this will call our backend logic to save the Album to the users collection. The backend also provides a way to cache the album bitmap. It provides us a stream we can save our bitmap to."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public async Task SaveToDiskAsync()\n{\n    await _album.SaveAsync();\n\n    if (Cover != null)\n    {\n        var bitmap = Cover;\n\n        await Task.Run(() =>\n        {\n            using (var fs = _album.SaveCoverBitmapStream())\n            {\n                bitmap.Save(fs);\n            }\n        });\n    }\n}\n")),(0,r.kt)("p",null,"Now we can simply call this method when our dialog returns its result in ",(0,r.kt)("inlineCode",{parentName:"p"},"MainWindowViewModel.cs"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"BuyMusicCommand = ReactiveCommand.CreateFromTask(async () =>\n{\n    var store = new MusicStoreViewModel();\n\n    var result = await ShowDialog.Handle(store);\n\n    if (result != null)\n    {\n        Albums.Add(result);\n\n        await result.SaveToDiskAsync();\n    }\n});\n")))}d.isMDXComponent=!0}}]);