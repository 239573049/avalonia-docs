"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[10090],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8498:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={description:"CONCEPTS - Input"},i="Keyboard and Hotkeys",s={unversionedId:"concepts/input/hotkeys",id:"concepts/input/hotkeys",title:"Keyboard and Hotkeys",description:"CONCEPTS - Input",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/concepts/input/hotkeys.md",sourceDirName:"concepts/input",slug:"/concepts/input/hotkeys",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/input/hotkeys",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/input/hotkeys.md",tags:[],version:"current",frontMatter:{description:"CONCEPTS - Input"},sidebar:"documentationSidebar",previous:{title:"Gestures",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/input/gestures"},next:{title:"The Main Window",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/the-main-window"}},p={},l=[{value:"Keys and Modifiers",id:"keys-and-modifiers",level:2},{value:"Reference",id:"reference",level:3},{value:"Source code",id:"source-code",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"keyboard-and-hotkeys"},"Keyboard and Hotkeys"),(0,r.kt)("p",null,"Various Controls that implement ",(0,r.kt)("inlineCode",{parentName:"p"},"ICommandSource")," have a ",(0,r.kt)("inlineCode",{parentName:"p"},"HotKey")," property that you can set or bind to. Pressing the hotkey will execute the command ",(0,r.kt)("a",{parentName:"p",href:"../../basics/user-interface/adding-interactivity#commands"},"bound")," to the Control."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<Menu>\n    <MenuItem Header="_File">\n        <MenuItem x:Name="SaveMenuItem" Header="_Save" Command="{Binding SaveCommand}" HotKey="Ctrl+S"/>\n    </MenuItem>\n</Menu>\n')),(0,r.kt)("p",null,"You can also use the static methods of the ",(0,r.kt)("inlineCode",{parentName:"p"},"HotKeyManager")," class to set and get hotkeys from code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"InitializeComponent();\nHotKeyManager.SetHotKey(saveMenuItem, new KeyGesture(Key.S, KeyModifiers.Control));\n")),(0,r.kt)("h2",{id:"keys-and-modifiers"},"Keys and Modifiers"),(0,r.kt)("p",null,"A Hotkey must have one ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Input/Key/"},"Key")," and zero or more ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyModifiers/"},"KeyModifiers"),". When setting a Hotkey in XAML using the ",(0,r.kt)("inlineCode",{parentName:"p"},"HotKey")," property, the string will be parsed as a ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyGesture/"},"KeyGesture"),". ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.enum.parse"},"Enum.Parse")," is used to parse the key and modifiers but synonyms like ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"Control")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Win")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"Meta")," can be used."),(0,r.kt)("h3",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/HotKeyManager/"},"HotKeyManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyGesture/"},"KeyGesture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyModifiers/"},"KeyModifiers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://reference.avaloniaui.net/api/Avalonia.Input/Key/"},"Key"))),(0,r.kt)("h3",{id:"source-code"},"Source code"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/HotkeyManager.cs"},"HotkeyManager.cs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Input/KeyGesture.cs"},"KeyGesture.cs"))))}d.isMDXComponent=!0}}]);