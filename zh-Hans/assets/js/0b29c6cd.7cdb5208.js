"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[23894],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:o,r[1]=c;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},32456:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const i={id:"change-notifications",title:"Change Notifications"},r=void 0,c={unversionedId:"data-binding/change-notifications",id:"version-0.10.x/data-binding/change-notifications",title:"Change Notifications",description:"Property Changes",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/data-binding/change-notifications.md",sourceDirName:"data-binding",slug:"/data-binding/change-notifications",permalink:"/avalonia-docs/zh-Hans/docs/data-binding/change-notifications",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/data-binding/change-notifications.md",tags:[],version:"0.10.x",frontMatter:{id:"change-notifications",title:"Change Notifications"},sidebar:"documentationSidebar",previous:{title:"The DataContext",permalink:"/avalonia-docs/zh-Hans/docs/data-binding/the-datacontext"},next:{title:"Bindings",permalink:"/avalonia-docs/zh-Hans/docs/data-binding/bindings"}},l={},s=[{value:"Property Changes",id:"property-changes",level:3},{value:"Collection Changes",id:"collection-changes",level:3}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"property-changes"},"Property Changes"),(0,o.kt)("p",null,"In order for Avalonia to know when a property on a view model has changed, the view model must implement change notifications. The easiest way to do this is to use ",(0,o.kt)("inlineCode",{parentName:"p"},"ReactiveUI")," and make your view model class inherit from ",(0,o.kt)("inlineCode",{parentName:"p"},"ReactiveObject"),"."),(0,o.kt)("p",null,"You then add a setter for each property which calls ",(0,o.kt)("inlineCode",{parentName:"p"},"RaiseAndSetIfChanged"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"using ReactiveUI;\n\npublic class MyViewModel : ReactiveObject\n{\n    private string caption;\n\n    public string Caption\n    {\n        get => caption;\n        set => this.RaiseAndSetIfChanged(ref caption, value);\n    }\n}\n")),(0,o.kt)("p",null,"For more information see the ",(0,o.kt)("a",{parentName:"p",href:"https://reactiveui.net/docs/handbook/view-models/"},"ReactiveUI documentation"),"."),(0,o.kt)("p",null,"If you don't want a dependency on ReactiveUI, you can implement ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.inotifypropertychanged"},(0,o.kt)("inlineCode",{parentName:"a"},"INotifyPropertyChanged")," manually"),"."),(0,o.kt)("h3",{id:"collection-changes"},"Collection Changes"),(0,o.kt)("p",null,"Collections also need to implement change notifications. There are a number of collections which do this for you out of the box:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel.observablecollection-1"},"ObservableCollection")," is available in the .NET base class library"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/reactiveui/DynamicData"},"DynamicData")," for more advanced scenarios"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://reactiveui.net/docs/handbook/obsolete/collections/reactive-list"},"ReactiveList")," in ReactiveUI ","(","deprecated in favor of DynamicData",")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AvaloniaList")," is shipped with Avalonia, but note that its API may change in future so for the moment it's recommended to not use it at the application level")),(0,o.kt)("p",null,"If you want to implement collection change notifications yourself you can implement ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.specialized.inotifycollectionchanged"},(0,o.kt)("inlineCode",{parentName:"a"},"INotifyCollectionChanged"))))}u.isMDXComponent=!0}}]);