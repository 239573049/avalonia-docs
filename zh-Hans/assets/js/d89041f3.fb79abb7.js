"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[71645],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=o,h=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return n?a.createElement(h,r(r({ref:t},m),{},{components:n})):a.createElement(h,r({ref:t},m))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},51479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const i={id:"button",title:"Button"},r=void 0,l={unversionedId:"controls/buttons/button",id:"version-0.10.x/controls/buttons/button",title:"Button",description:"The Button control is a ContentControl which reacts to pointer presses.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/controls/buttons/button.md",sourceDirName:"controls/buttons",slug:"/controls/buttons/button",permalink:"/avalonia-docs/zh-Hans/docs/controls/buttons/button",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/controls/buttons/button.md",tags:[],version:"0.10.x",frontMatter:{id:"button",title:"Button"},sidebar:"documentationSidebar",previous:{title:"Buttons",permalink:"/avalonia-docs/zh-Hans/docs/controls/buttons/"},next:{title:"RadioButton",permalink:"/avalonia-docs/zh-Hans/docs/controls/buttons/radiobutton"}},s={},p=[{value:"Subclasses",id:"subclasses",level:2},{value:"Common Properties",id:"common-properties",level:2},{value:"Pseudoclasses",id:"pseudoclasses",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Source code",id:"source-code",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic button",id:"basic-button",level:3},{value:"Colored button",id:"colored-button",level:3},{value:"Play button",id:"play-button",level:3},{value:"Binding to a View Model Command",id:"binding-to-a-view-model-command",level:2},{value:"Binding to Events",id:"binding-to-events",level:3}],m={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Button")," control is a ",(0,o.kt)("a",{parentName:"p",href:"../contentcontrol"},(0,o.kt)("inlineCode",{parentName:"a"},"ContentControl"))," which reacts to pointer presses."),(0,o.kt)("p",null,"A button notifies clicks by raising the ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/61B1E7A8"},(0,o.kt)("inlineCode",{parentName:"a"},"Click"))," event. A click is distinct from a ",(0,o.kt)("inlineCode",{parentName:"p"},"PointerDown")," event in that it is raised by default when the button is pressed and then released (although this behavior can be changed by setting the ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/ClickMode/"},(0,o.kt)("inlineCode",{parentName:"a"},"ClickMode"))," property)."),(0,o.kt)("p",null,"Alternatively an instance of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-gb/dotnet/api/system.windows.input.icommand?view=netstandard-2.0"},(0,o.kt)("inlineCode",{parentName:"a"},"ICommand"))," can be assigned or bound to the button's ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/4AAA993D"},(0,o.kt)("inlineCode",{parentName:"a"},"Command"))," property. This command will be executed when the button is clicked. For more information see ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Data/Binding/"},"binding to commands"),"."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/61B1E7A8"},(0,o.kt)("inlineCode",{parentName:"a"},"Click"))," is just one of several events that Buttons have. Another example is ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Input/InputElement/B4FED8A5"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerEnter"))," or ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Input/InputElement/0ABE1887"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerLeave")),". You can get the full list of Button Events ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/#Events"},"here"),"."),(0,o.kt)("p",null,"The Button control's full documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/"},"here")),(0,o.kt)("h2",{id:"subclasses"},"Subclasses"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DrawingPresenter/"},"ToggleButton")," - Toggles between checked and unchecked on click.")),(0,o.kt)("h2",{id:"common-properties"},"Common Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ClickMode")),(0,o.kt)("td",{parentName:"tr",align:null},"Describes how the button should react to clicks")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Command")),(0,o.kt)("td",{parentName:"tr",align:null},"A command to be invoked when the button is clicked")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"CommandParameter")),(0,o.kt)("td",{parentName:"tr",align:null},"A parameter to be passed to ",(0,o.kt)("inlineCode",{parentName:"td"},"Command"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Content")),(0,o.kt)("td",{parentName:"tr",align:null},"The content to display in the button")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IsDefault")),(0,o.kt)("td",{parentName:"tr",align:null},"When set, pressing the enter key clicks the button even if not focused")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IsPressed")),(0,o.kt)("td",{parentName:"tr",align:null},"Set when the button is depressed")))),(0,o.kt)("h2",{id:"pseudoclasses"},"Pseudoclasses"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Pseudoclass"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},":pressed")),(0,o.kt)("td",{parentName:"tr",align:null},"Set when the button is depressed")))),(0,o.kt)("h2",{id:"api-reference"},"API Reference"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/"},"Button")),(0,o.kt)("h2",{id:"source-code"},"Source code"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/Button.cs"},"Button.cs")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"basic-button"},"Basic button"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="AvaloniaAppTemplate">\n    <StackPanel>\n        <Button Width="160" >My Button</Button>\n    </StackPanel>\n</Window>\n')),(0,o.kt)("p",null,"produces following output with ",(0,o.kt)("strong",{parentName:"p"},"Windows 10"),"\\"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:"/img/controls/buttons/button/_basic (1).png",alt:"Basic button"})),(0,o.kt)("h3",{id:"colored-button"},"Colored button"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="AvaloniaAppTemplate">\n    <StackPanel>\n        <Button Width="200" Foreground="White" Background="Red">White text, red background</Button>\n    </StackPanel>\n</Window>\n')),(0,o.kt)("p",null,"produces following output with ",(0,o.kt)("strong",{parentName:"p"},"Windows 10"),"\\"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:"/img/controls/buttons/button/image (18) (1).png",alt:"Colored button"})),(0,o.kt)("h3",{id:"play-button"},"Play button"),(0,o.kt)("p",null,'Toggles between a "Play" icon and a "Pause" icon on click.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<UserControl.Resources>\n    <Bitmap x:Key="Play">\n        <x:Arguments>\n            <x:String>/Assets/Player/Play.png</x:String>\n        </x:Arguments>\n    </Bitmap>\n    <Bitmap x:Key="Pause">\n        <x:Arguments>\n            <x:String>/Assets/Player/Pause.png</x:String>\n        </x:Arguments>\n    </Bitmap>\n</UserControl.Resources>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<Button Name="PlayButton" HorizontalAlignment="Center" Width="36" Command="{Binding PlayCommand}">\n    <Panel>\n        <Image Source="{DynamicResource Play}" IsVisible="{Binding !IsPlaying}" Width="20"\n                          Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />\n        <Image Source="{DynamicResource Pause}" IsVisible="{Binding IsPlaying}" Width="20"\n                          Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />\n    </Panel>\n</Button>\n')),(0,o.kt)("h2",{id:"binding-to-a-view-model-command"},"Binding to a View Model Command"),(0,o.kt)("p",null,"It is possible to bind a view model command to a simple method or with a ReactiveCommand. There are lots of advantages to the ReactiveCommand binding for all but the simplest user interfaces such as being able to pass an ",(0,o.kt)("inlineCode",{parentName:"p"},"IObservable<bool>"),' object in to have it dynamically calculate state. Both methods are displayed below. First the "simple" method binding:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="AvaloniaAppTemplate">\n    <StackPanel>\n        <Button Width="160" Command="{Binding OnClickCommand}">My Button</Button>\n    </StackPanel>\n</Window>\n')),(0,o.kt)("p",null,"The Code in the bound View Model for the above will either look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public void OnClickCommand()\n{\n    // do something\n}\n")),(0,o.kt)("p",null,"If using ReactiveCommands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public MainWindowViewModel()\n{\n    OnClickCommand = ReactiveCommand.Create(() => { /* do something */ });\n}\n\npublic ReactiveCommand OnClickCommand { get; }\n")),(0,o.kt)("h3",{id:"binding-to-events"},"Binding to Events"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="AvaloniaAppTemplate">\n    <StackPanel>\n        <Button Width="160" \n                Click="OnButtonClick"\n                PointerEnter="OnPointerEnter"\n                Content="My Button"/>\n    </StackPanel>\n</Window>\n')),(0,o.kt)("p",null,"The corresponding C# code in the View's cs file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"private void OnButtonClick(object sender, RoutedEventArgs e)\n{\n    //do something on click\n}\n\nprivate void OnPointerEnter(object sender, PointerEventArgs e)\n{\n    //do something when pointer enters\n}\n")))}d.isMDXComponent=!0}}]);