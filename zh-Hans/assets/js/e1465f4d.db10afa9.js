"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[27890],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return t?a.createElement(h,i(i({ref:n},d),{},{components:t})):a.createElement(h,i({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},49997:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={id:"create-a-custom-panel",title:"Create a Custom Panel"},i=void 0,l={unversionedId:"layout/create-a-custom-panel",id:"version-0.10.x/layout/create-a-custom-panel",title:"Create a Custom Panel",description:"This example shows how to override the default layout behavior of the Panel element and create custom layout elements that are derived from Panel.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/layout/create-a-custom-panel.md",sourceDirName:"layout",slug:"/layout/create-a-custom-panel",permalink:"/avalonia-docs/zh-Hans/docs/layout/create-a-custom-panel",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/layout/create-a-custom-panel.md",tags:[],version:"0.10.x",frontMatter:{id:"create-a-custom-panel",title:"Create a Custom Panel"},sidebar:"documentationSidebar",previous:{title:"Alignment, Margins and Padding",permalink:"/avalonia-docs/zh-Hans/docs/layout/alignment-margins-and-padding"},next:{title:"Distribution / Publishing",permalink:"/avalonia-docs/zh-Hans/docs/distribution-publishing/"}},s={},c=[],d={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This example shows how to override the default layout behavior of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Panel")," element and create custom layout elements that are derived from ",(0,r.kt)("inlineCode",{parentName:"p"},"Panel"),"."),(0,r.kt)("p",null,"The example defines a simple custom ",(0,r.kt)("inlineCode",{parentName:"p"},"Panel")," element called ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotPanel"),", which positions child elements according to two hard-coded x- and y-coordinates. In this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," are both set to ",(0,r.kt)("inlineCode",{parentName:"p"},"50"),"; therefore, all child elements are positioned at that location on the x and y axes."),(0,r.kt)("p",null,"To implement custom ",(0,r.kt)("inlineCode",{parentName:"p"},"Panel")," behaviors, the example uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"MeasureOverride")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ArrangeOverride")," methods. Each method returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"Size")," data that is necessary to position and render child elements."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public class PlotPanel : Panel\n{\n    // Override the default Measure method of Panel\n    protected override Size MeasureOverride(Size availableSize)\n    {\n        var panelDesiredSize = new Size();\n\n        // In our example, we just have one child. \n        // Report that our panel requires just the size of its only child.\n        foreach (var child in Children)\n        {\n            child.Measure(availableSize);\n            panelDesiredSize = child.DesiredSize;\n        }\n\n        return panelDesiredSize;\n    }\n\n    protected override Size ArrangeOverride(Size finalSize)\n    {\n        foreach (var child in Children)\n        {\n            double x = 50;\n            double y = 50;\n\n            child.Arrange(new Rect(new Point(x, y), child.DesiredSize));\n        }\n        \n        return finalSize; // Returns the final Arranged size\n    }\n}\n")))}u.isMDXComponent=!0}}]);