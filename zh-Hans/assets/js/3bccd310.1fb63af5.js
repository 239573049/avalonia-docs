"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[47430],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),m=a,h=l["".concat(s,".").concat(m)]||l[m]||g[m]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},96032:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const i={description:"REFERENCE - Gestures"},o="PinchGestureRecognizer",c={unversionedId:"reference/gestures/pinchgesturerecognizer",id:"reference/gestures/pinchgesturerecognizer",title:"PinchGestureRecognizer",description:"REFERENCE - Gestures",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/reference/gestures/pinchgesturerecognizer.md",sourceDirName:"reference/gestures",slug:"/reference/gestures/pinchgesturerecognizer",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/pinchgesturerecognizer",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/gestures/pinchgesturerecognizer.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Gestures"},sidebar:"documentationSidebar",previous:{title:"Gestures",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/"},next:{title:"PullGestureRecognizer",permalink:"/avalonia-docs/zh-Hans/docs/next/reference/gestures/pullgesturerecognizer"}},s={},u=[{value:"Using a PinchGestureRecognizer",id:"using-a-pinchgesturerecognizer",level:2},{value:"More Information",id:"more-information",level:2}],p={toc:u},l="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(l,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pinchgesturerecognizer"},"PinchGestureRecognizer"),(0,a.kt)("p",null,"A gesture recognizer that tracks a pinch gesture. A pinch gesture occurs when two pointer contacts are brought towards each other, or away from each other. This is useful in controls that implements a pinch to zoom interaction."),(0,a.kt)("h2",{id:"using-a-pinchgesturerecognizer"},"Using a PinchGestureRecognizer"),(0,a.kt)("p",null,"A PinchGestureRecognizer can be attached to a control using the control's ",(0,a.kt)("inlineCode",{parentName:"p"},"GestureRecognizers")," property."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Image Stretch="UniformToFill"\n        Margin="5"\n        Name="image"\n        Source="/image.jpg">\n  <Image.GestureRecognizers>\n    <PinchGestureRecognizer/>\n  </Image.GestureRecognizers>\n</Image>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C#'",title:"'C#'"},"image.GestureRecognizers.Add(new PinchGestureRecognizer());\n")),(0,a.kt)("p",null,"The PinchGestureRegonizer raises a ",(0,a.kt)("inlineCode",{parentName:"p"},"Gestures.PinchEvent")," when it detects the start of a pull gesture. When the pull ends, from the pointer being released or another gesture start, it raises a ",(0,a.kt)("inlineCode",{parentName:"p"},"Gestures.PinchEndedEvent"),".\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"Scale")," property in the args passed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Gestures.PinchEvent")," event handler contains the relative size of the pinch since it started."),(0,a.kt)("h2",{id:"more-information"},"More Information"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"View the source code on ",(0,a.kt)("em",{parentName:"p"},"GitHub")," "),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/GestureRecognizers/PinchGestureRecognizer.cs"},(0,a.kt)("inlineCode",{parentName:"a"},"PinchGestureRecognizer.cs"))),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/PinchEventArgs.cs"},(0,a.kt)("inlineCode",{parentName:"a"},"PinchEventArgs.cs")))))}g.isMDXComponent=!0}}]);