"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[14121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,d=m["".concat(s,".").concat(u)]||m[u]||h[u]||i;return n?a.createElement(d,r(r({ref:t},c),{},{components:n})):a.createElement(d,r({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},88498:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const i={description:"TUTORIALS - To Do List App"},r="Inspect the XAML",l={unversionedId:"tutorials/todo-list-app/inspect-the-xaml",id:"tutorials/todo-list-app/inspect-the-xaml",title:"Inspect the XAML",description:"TUTORIALS - To Do List App",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/tutorials/todo-list-app/inspect-the-xaml.md",sourceDirName:"tutorials/todo-list-app",slug:"/tutorials/todo-list-app/inspect-the-xaml",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/inspect-the-xaml",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/tutorials/todo-list-app/inspect-the-xaml.md",tags:[],version:"current",frontMatter:{description:"TUTORIALS - To Do List App"},sidebar:"documentationSidebar",previous:{title:"Create a New View",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/creating-a-view"},next:{title:"Main Window Content",permalink:"/avalonia-docs/zh-Hans/docs/next/tutorials/todo-list-app/main-window-content"}},s={},p=[{value:"Control Content",id:"control-content",level:2}],c={toc:p},m="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"inspect-the-xaml"},"Inspect the XAML"),(0,o.kt)("p",null,"This is a good time for you to take a look at the code generated by the view template."," "),(0,o.kt)("p",null,"Start with the root element, its declarations of namespaces and settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},' <UserControl \n    xmlns="https://github.com/avaloniaui"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="450"\n    x:Class="ToDoList.Views.ToDoListView">\n')),(0,o.kt)("p",null,"The root element in the XAML file starts ",(0,o.kt)("inlineCode",{parentName:"p"},"<UserControl")," and this is followed by a number of XML  ",(0,o.kt)("inlineCode",{parentName:"p"},"xmlns")," namespace declarations common to ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," controls.  The most important declaration to note is the first one:"," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<UserControl xmlns="https://github.com/avaloniaui" ... >\n')),(0,o.kt)("p",null,"This declares that the XAML in the file contains ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," XAML."),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Without this entry nothing will work in your ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," project!")),(0,o.kt)("p",null,"The next namespace is ",(0,o.kt)("inlineCode",{parentName:"p"},'xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"')," and this is used to import Microsoft XAML language features that are used by ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI"),"."," "),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For more information see the Microsoft documentation ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/desktop/xaml-services/namespace-language-features"},"here"),".")),(0,o.kt)("p",null,"The remaining two namespaces are used to communicate information to the ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," designer (code and preview panes)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<UserControl ...\n     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" ... > \n')),(0,o.kt)("p",null,"For example, as you have already done, you can specify the width and height of the control as it is displayed in the designer preview pane:"),(0,o.kt)("pre",{class:"language-xml"},(0,o.kt)("code",{class:"lang-xml"},"<UserControl ...",(0,o.kt)("strong",null,'mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="450" ... >'))),(0,o.kt)("p",null,"The entry ",(0,o.kt)("inlineCode",{parentName:"p"},'mc:Ignorable="d"')," tells the ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," XAML engine that entries beginning with ",(0,o.kt)("inlineCode",{parentName:"p"},"d:")," can be ignored at runtime."),(0,o.kt)("p",null,"The last line links the XAML file with its code-behind class. Note that the fully-qualified class name has to be used here."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<UserControl ...\n   x:Class="ToDoList.Views.ToDoListView">\n')),(0,o.kt)("h2",{id:"control-content"},"Control Content"),(0,o.kt)("p",null,"The content zone of the user control is occupied by a dock panel:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<DockPanel>\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To review the concept of layout zones, see ",(0,o.kt)("a",{parentName:"p",href:"../../concepts/layout/layout-zones"},"here"),".")),(0,o.kt)("p",null,"A user control can only contain a single child control in its content zone; so you will often need to start a layout with one of the ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," panel controls, as these allow you to contain multiple child controls in the space instead."," "),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can browse the full range of ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," panel controls in the reference section  ",(0,o.kt)("a",{parentName:"p",href:"/avalonia-docs/zh-Hans/docs/next/reference/controls/panel"},"here"),".")),(0,o.kt)("p",null,"In this example, you are using the dock panel ",(0,o.kt)("inlineCode",{parentName:"p"},"<DockPanel>")," control. This is a type of panel which lays out its child controls along the edges of its content zone. Each child control can specify which edge: top, bottom, left or right. This is done using the ",(0,o.kt)("inlineCode",{parentName:"p"},"DockPanel.Dock")," attribute. For example, this XAML aligns a button at the bottom of the view; and it is stretched to fit the width, with its text centered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Button DockPanel.Dock="Bottom"\n    HorizontalAlignment="Stretch"\n    HorizontalContentAlignment="Center">Add Item</Button>\n')),(0,o.kt)("p",null,"In a dock panel there must be a single control filling the remaining space in its content zone (wherever that is located); or it will not display correctly. This filling control must have no ",(0,o.kt)("inlineCode",{parentName:"p"},"DockPanel.Dock")," attribute. The tutorial uses a stack panel to fill the remainng space:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<StackPanel>\n")),(0,o.kt)("p",null,"The stack panel lays out its child controls in a stack, which is vertical by default. (You can make the stack horizontal by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"Orientation")," attribute.) You will often use the stack panel in your ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," layouts."," "),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To more detail about the stack panel, see the reference ",(0,o.kt)("a",{parentName:"p",href:"/avalonia-docs/zh-Hans/docs/next/reference/controls/stackpanel"},"here"),".")),(0,o.kt)("p",null,"The remaining XAML adds the hard-coded to do list items as check boxes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<CheckBox Margin="4">Walk the dog</CheckBox>\n<CheckBox Margin="4">Buy some milk</CheckBox>\n')),(0,o.kt)("p",null,"Notice that these controls have the margin attribute set. This will separate them a little visually."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The margin is one of the ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," control layout zones. To review the concept of layout zones, see ",(0,o.kt)("a",{parentName:"p",href:"../../concepts/layout/layout-zones"},"here"),".")),(0,o.kt)("p",null,"On the next page, you will learn how to display the view created here in the main window of the app."))}h.isMDXComponent=!0}}]);