"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[76025],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(r),u=o,f=d["".concat(l,".").concat(u)]||d[u]||y[u]||a;return r?n.createElement(f,p(p({ref:t},s),{},{components:r})):n.createElement(f,p({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,p[1]=i;for(var c=2;c<a;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},54730:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>y,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={info:"dependencyproperty",title:"DependencyProperty"},p=void 0,i={unversionedId:"wpf-developer-tips/dependencyproperty",id:"version-0.10.x/wpf-developer-tips/dependencyproperty",title:"DependencyProperty",description:"The Avalonia equivalent of DependencyProperty is StyledProperty, however Avalonia has a richer property system than WPF, and includes DirectProperty for turning standard CLR properties into Avalonia properties. The common base class of StyledProperty and DirectProperty is AvaloniaProperty.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/wpf-developer-tips/dependencyproperty.md",sourceDirName:"wpf-developer-tips",slug:"/wpf-developer-tips/dependencyproperty",permalink:"/avalonia-docs/zh-Hans/docs/wpf-developer-tips/dependencyproperty",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/wpf-developer-tips/dependencyproperty.md",tags:[],version:"0.10.x",frontMatter:{info:"dependencyproperty",title:"DependencyProperty"},sidebar:"documentationSidebar",previous:{title:"UIElement, FrameworkElement and Control",permalink:"/avalonia-docs/zh-Hans/docs/wpf-developer-tips/uielement-frameworkelement-and-control"},next:{title:"Grid",permalink:"/avalonia-docs/zh-Hans/docs/wpf-developer-tips/grid"}},l={},c=[],s={toc:c},d="wrapper";function y(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Avalonia equivalent of ",(0,o.kt)("inlineCode",{parentName:"p"},"DependencyProperty")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"StyledProperty"),", however Avalonia ",(0,o.kt)("a",{parentName:"p",href:"../authoring-controls/defining-properties"},"has a richer property system than WPF"),", and includes ",(0,o.kt)("inlineCode",{parentName:"p"},"DirectProperty")," for turning standard CLR properties into Avalonia properties. The common base class of ",(0,o.kt)("inlineCode",{parentName:"p"},"StyledProperty")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"DirectProperty")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"AvaloniaProperty"),"."),(0,o.kt)("p",null,"If your dependency property uses ",(0,o.kt)("inlineCode",{parentName:"p"},"FrameworkPropertyMetadataOptions.AffectsMeasure")," now you should use ",(0,o.kt)("inlineCode",{parentName:"p"},"AffectsMeasure<TControl>(MyProperty)")," to obtain desired effect."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"WPF")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'// SplitterPanel control\npublic static readonly DependencyProperty OrientationProperty =\n    DependencyProperty.Register(\n        "Orientation",\n        typeof(Orientation),\n        typeof(SplitterPanel),\n        new FrameworkPropertyMetadata(\n            Orientation.Horizontal,\n            FrameworkPropertyMetadataOptions.AffectsMeasure));\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Avalonia")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"// SplitterPanel control\npublic static readonly StyledProperty<Orientation> OrientationProperty =\n    AvaloniaProperty.Register<SplitterPanel, Orientation>(nameof(Orientation), Orientation.Horizontal);\n\nstatic SplitterPanel()\n{\n    AffectsMeasure<SplitterPanel>(OrientationProperty);\n}\n")))}y.isMDXComponent=!0}}]);