"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[37809],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>y});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=m(a),d=r,y=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return a?n.createElement(y,l(l({ref:t},s),{},{components:a})):n.createElement(y,l({ref:t},s))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var m=2;m<o;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},40256:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const o={id:"implement-idatatemplates",title:"Implementing IDataTemplate"},l=void 0,i={unversionedId:"templates/implement-idatatemplates",id:"version-0.10.x/templates/implement-idatatemplates",title:"Implementing IDataTemplate",description:"If you need more control over your DataTemplate you can do this by creating a class which implements the IDataTemplate-interface. With this interface you can create your own DataTemplate not only respecting the DataType of your data, but also its properties or whatever you like.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/templates/implement-idatatemplates.md",sourceDirName:"templates",slug:"/templates/implement-idatatemplates",permalink:"/avalonia-docs/zh-Hans/docs/templates/implement-idatatemplates",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/templates/implement-idatatemplates.md",tags:[],version:"0.10.x",frontMatter:{id:"implement-idatatemplates",title:"Implementing IDataTemplate"},sidebar:"documentationSidebar",previous:{title:"Creating Data Templates in Code",permalink:"/avalonia-docs/zh-Hans/docs/templates/creating-data-templates-in-code"},next:{title:"Authoring Controls",permalink:"/avalonia-docs/zh-Hans/docs/authoring-controls/"}},p={},m=[{value:"Samples",id:"samples",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Advanced Samples",id:"advanced-samples",level:3}],s={toc:m},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you need more control over your ",(0,r.kt)("inlineCode",{parentName:"p"},"DataTemplate")," you can do this by creating a class which implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"IDataTemplate"),"-interface. With this interface you can create your own ",(0,r.kt)("inlineCode",{parentName:"p"},"DataTemplate")," not only respecting the ",(0,r.kt)("inlineCode",{parentName:"p"},"DataType")," of your data, but also its properties or whatever you like. "),(0,r.kt)("p",null,"To use this interface you must implement the following two members in your class:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"public bool Match(object data) { ... }")," you need to check in this method if the provided data matches your ",(0,r.kt)("inlineCode",{parentName:"li"},"IDataTemplate")," or not. You need to return true if the data matches, otherwise false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"public IControl Build(object param) { ... }")," In this method you need to build and return the control which represents your data. ")),(0,r.kt)("h2",{id:"samples"},"Samples"),(0,r.kt)("h3",{id:"basic-example"},"Basic Example"),(0,r.kt)("p",null,"Below is a very basic sample implementation of the ",(0,r.kt)("inlineCode",{parentName:"p"},"IDataTemplate"),"-interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// remember to import the needed namespace\n// using Avalonia.Controls.Templates;\n\npublic class MyDataTemplate : IDataTemplate\n{\n    public IControl Build(object param)\n    {\n        // build the control to display\n        return new TextBlock() { Text = (string)param };\n    }\n\n    public bool Match(object data)\n    {\n        // Check if we can accept the provided data\n        return data is string;\n    }\n}\n")),(0,r.kt)("p",null,"You can now use the class ",(0,r.kt)("inlineCode",{parentName:"p"},"MyDataTemplate")," in your view like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'\x3c!-- remember to add the needed prefix in your view --\x3e\n\x3c!-- xmlns:dataTemplates="using:MyApp.DataTemplates" --\x3e\n\n<ContentControl Content="{Binding MyContent}">\n    <ContentControl.ContentTemplate>\n        <dataTemplates:MyDataTemplate />\n    </ContentControl.ContentTemplate>\n</ContentControl>\n')),(0,r.kt)("h3",{id:"advanced-samples"},"Advanced Samples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia.Samples/tree/main/src/Avalonia.Samples/DataTemplates/IDataTemplateSample"},"Implementing IDataTemplate")))}u.isMDXComponent=!0}}]);