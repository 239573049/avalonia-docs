"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[88729],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(a),g=r,h=c["".concat(l,".").concat(g)]||c[g]||u[g]||s;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<s;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},72086:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const s={id:"insets-manager",title:"Insets Manager"},o=void 0,i={unversionedId:"concepts/services/insets-manager",id:"concepts/services/insets-manager",title:"Insets Manager",description:"The InsetsManager allows you to interact with the platform's system bars and handle changes to the safe area of the mobile window.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/concepts/services/insets-manager.md",sourceDirName:"concepts/services",slug:"/concepts/services/insets-manager",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/services/insets-manager",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/services/insets-manager.md",tags:[],version:"current",frontMatter:{id:"insets-manager",title:"Insets Manager"},sidebar:"documentationSidebar",previous:{title:"Focus Manager",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/services/focus-manager"},next:{title:"Platform Settings",permalink:"/avalonia-docs/zh-Hans/docs/next/concepts/services/platform-settings"}},l={},d=[{value:"Properties",id:"properties",level:2},{value:"IsSystemBarVisible",id:"issystembarvisible",level:3},{value:"DisplayEdgeToEdge",id:"displayedgetoedge",level:3},{value:"SafeAreaPadding",id:"safeareapadding",level:3},{value:"SystemBarColor",id:"systembarcolor",level:3},{value:"SafeAreaChanged",id:"safeareachanged",level:3},{value:"Properties",id:"properties-1",level:2},{value:"SafeAreaPadding",id:"safeareapadding-1",level:3},{value:"Values",id:"values",level:2},{value:"Light",id:"light",level:3},{value:"Dark",id:"dark",level:3}],p={toc:d},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InsetsManager")," allows you to interact with the platform's system bars and handle changes to the safe area of the mobile window. "),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InsetsManager")," can be access through an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"TopLevel")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Window"),", for more details on accessing ",(0,r.kt)("inlineCode",{parentName:"p"},"TopLevel")," please visit ",(0,r.kt)("a",{parentName:"p",href:"../toplevel"},"TopLevel")," page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"var insetsManager = TopLevel.GetTopLevel(control).InsetsManager;\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"As for now, this service has implementation only on mobile and browser backends. If you need to adjust desktop window decorations, please use ",(0,r.kt)("inlineCode",{parentName:"p"},"Window.ExtendClientAreaToDecorationsHint"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Window.ExtendClientAreaChromeHints"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Window.ExtendClientAreaTitleBarHeightHint")," properties.")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"issystembarvisible"},"IsSystemBarVisible"),(0,r.kt)("p",null,"Gets or sets a value indicating whether the system bars are visible. Returns null if the platform doesn't support showing or hiding system bars."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool? IsSystemBarVisible { get; set; }\n")),(0,r.kt)("h3",{id:"displayedgetoedge"},"DisplayEdgeToEdge"),(0,r.kt)("p",null,"Gets or sets a value indicating whether the window should be drawn edge-to-edge behind any visible system bars."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool DisplayEdgeToEdge { get; set; }\n")),(0,r.kt)("h3",{id:"safeareapadding"},"SafeAreaPadding"),(0,r.kt)("p",null,"Gets the current safe area padding. The safe area represents the portion of the window that is not obscured by system bars."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"Thickness SafeAreaPadding { get; }\n")),(0,r.kt)("h3",{id:"systembarcolor"},"SystemBarColor"),(0,r.kt)("p",null,"Gets or sets the color of the platform's system bars. Returns null if the platform doesn't support setting the system bar color."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"Color? SystemBarColor { get; set; }\n")),(0,r.kt)("p",null,"##\xa0Events"),(0,r.kt)("h3",{id:"safeareachanged"},"SafeAreaChanged"),(0,r.kt)("p",null,"Occurs when the safe area for the current window changes. This can happen when system bars are shown or hidden, or when the window's size or orientation changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"event EventHandler<SafeAreaChangedArgs>? SafeAreaChanged;\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"#\xa0SafeAreaChangedArgs\nSafeAreaChangedArgs is a class that provides data for the SafeAreaChanged event."),(0,r.kt)("h2",{id:"properties-1"},"Properties"),(0,r.kt)("h3",{id:"safeareapadding-1"},"SafeAreaPadding"),(0,r.kt)("p",null,"Gets the new safe area padding."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"public Thickness SafeAreaPadding { get; }\n")),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"systembartheme"},"SystemBarTheme"),(0,r.kt)("p",null,"SystemBarTheme is an enumeration with values that represent light and dark themes for the system bar."),(0,r.kt)("h2",{id:"values"},"Values"),(0,r.kt)("h3",{id:"light"},"Light"),(0,r.kt)("p",null,"The system bar has a light background and a dark foreground."),(0,r.kt)("h3",{id:"dark"},"Dark"),(0,r.kt)("p",null,"The system bar has a dark background and a light foreground."))}u.isMDXComponent=!0}}]);