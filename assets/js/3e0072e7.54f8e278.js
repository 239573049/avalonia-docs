"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[42311],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=s,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,i=new Array(r);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},44265:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(87462),s=(a(67294),a(3905));const r={id:"assets",title:"Assets"},i=void 0,o={unversionedId:"getting-started/assets",id:"version-0.10.x/getting-started/assets",title:"Assets",description:"Many applications need to include assets such as bitmaps and resource dictionaries within their executable and refer to these assets from XAML.",source:"@site/versioned_docs/version-0.10.x/getting-started/assets.md",sourceDirName:"getting-started",slug:"/getting-started/assets",permalink:"/avalonia-docs/docs/getting-started/assets",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/getting-started/assets.md",tags:[],version:"0.10.x",frontMatter:{id:"assets",title:"Assets"},sidebar:"documentationSidebar",previous:{title:"UserControls",permalink:"/avalonia-docs/docs/getting-started/usercontrols"},next:{title:"Developer Tools",permalink:"/avalonia-docs/docs/getting-started/developer-tools"}},l={},c=[{value:"Including assets",id:"including-assets",level:3},{value:"Referencing assets",id:"referencing-assets",level:3},{value:"Referencing manifest resources",id:"referencing-manifest-resources",level:3},{value:"Loading assets from code",id:"loading-assets-from-code",level:3}],p={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,s.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Many applications need to include assets such as bitmaps and ",(0,s.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/styling/resources"},"resource dictionaries")," within their executable and refer to these assets from XAML."),(0,s.kt)("h3",{id:"including-assets"},"Including assets"),(0,s.kt)("p",null,"Assets can be included in an application by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"<AvaloniaResource>")," item in your project file. The MVVM Application template by default includes all files in the ",(0,s.kt)("inlineCode",{parentName:"p"},"Assets")," directory as an ",(0,s.kt)("inlineCode",{parentName:"p"},"<AvaloniaResource>"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<ItemGroup>\n  <AvaloniaResource Include="Assets\\**"/>\n</ItemGroup>\n')),(0,s.kt)("p",null,"You can include whatever files you want by adding additional ",(0,s.kt)("inlineCode",{parentName:"p"},"<AvaloniaResource>")," elements."),(0,s.kt)("p",null,"You will notice that we're referring to ",(0,s.kt)("em",{parentName:"p"},"assets")," here whereas the MSBuild item is called an Avalonia ",(0,s.kt)("em",{parentName:"p"},"resource"),". Assets are internally stored as ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/visualstudio/ide/managing-application-resources-dotnet"},".NET resources"),' but because the term "resource" conflicts with ',(0,s.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/styling/resources"},"XAML resources"),' we\'ll refer to them as "assets" throughout.'),(0,s.kt)("h3",{id:"referencing-assets"},"Referencing assets"),(0,s.kt)("p",null,"Assets can be referenced in XAML by specifying their relative path:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<Image Source="icon.png"/>\n<Image Source="images/icon.png"/>\n<Image Source="../icon.png"/>\n')),(0,s.kt)("p",null,"Or their rooted path:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<Image Source="/Assets/icon.png"/>\n')),(0,s.kt)("p",null,"If the asset is located in a different assembly from the XAML file, then use the ",(0,s.kt)("inlineCode",{parentName:"p"},"avares:")," URI scheme. For example, if the asset is contained in an assembly called ",(0,s.kt)("inlineCode",{parentName:"p"},"MyAssembly.dll"),", then you would use:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<Image Source="avares://MyAssembly/Assets/icon.png"/>\n')),(0,s.kt)("p",null,"In case of fonts, you can provide a font name after a '#' sign:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<TextBlock FontFamily="avares://MyAssembly/Assets/font.ttf#FontName">test</TextBlock>\n')),(0,s.kt)("p",null,"Avalonia provides converters which can load assets for bitmaps, icons and fonts out of the box. So an assets Uri can be automatically converted to any of following types: ",(0,s.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Media/IImage"},"IImage"),", ",(0,s.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Media.Imaging/IBitmap"},"IBitmap"),", ",(0,s.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/WindowIcon"},"WindowIcon")," and ",(0,s.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Media/FontFamily"},"FontFamily")),(0,s.kt)("h3",{id:"referencing-manifest-resources"},"Referencing manifest resources"),(0,s.kt)("p",null,"Assets can also be included in .NET applications by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"<EmbeddedResource>")," MSBuild item which causes the file to be included in the assembly as a ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.getmanifestresourcenames"},"manifest resource"),"."),(0,s.kt)("p",null,"You can reference manifest resources using the ",(0,s.kt)("inlineCode",{parentName:"p"},"resm:")," URL scheme:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<Image Source="resm:MyApp.Assets.icon.png"/>\n')),(0,s.kt)("p",null,"Or if the resource is embedded in a different assembly to the XAML file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markup"},'<Image Source="resm:MyApp.Assets.icon.png?assembly=MyAssembly"/>\n')),(0,s.kt)("p",null,"The name of the asset is automatically generated by MSBuild from the assembly name, the file path and the filename - all separated with periods. If Avalonia is unable to find a manifest resource, check the resource name using ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.getmanifestresourcenames"},(0,s.kt)("inlineCode",{parentName:"a"},"Assembly.GetManifestResourceNames")),"."),(0,s.kt)("p",null,'Note: starting with 11.0 Avalonia doesn\'t support manifest "resm" resources anymore. Use Avalonia Resources instead (avares).'),(0,s.kt)("h3",{id:"loading-assets-from-code"},"Loading assets from code"),(0,s.kt)("p",null,"Assets can be loaded from code using the ",(0,s.kt)("inlineCode",{parentName:"p"},"IAssetLoader")," interface:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"var assets = AvaloniaLocator.Current.GetService<IAssetLoader>();\nvar bitmap = new Bitmap(assets.Open(new Uri(uri)));\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"uri")," variable in the snippet can contain any valid URI, including ",(0,s.kt)("inlineCode",{parentName:"p"},"avares:")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"resm:")," as described above. By default, Avalonia does not provide support for ",(0,s.kt)("inlineCode",{parentName:"p"},"file://"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"http://"),", or ",(0,s.kt)("inlineCode",{parentName:"p"},"https://")," schemes. If you want to load files from disk or web, you can implement that functionality yourself or use community implementations like ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUtils/AsyncImageLoader.Avalonia"},"https://github.com/AvaloniaUtils/AsyncImageLoader.Avalonia"),"."))}m.isMDXComponent=!0}}]);