"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[35199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,y=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return n?o.createElement(y,l(l({ref:t},d),{},{components:n})):o.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15182:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const r={id:"add-some-layout",title:"Add Some Layout"},l=void 0,i={unversionedId:"get-started/test-drive/add-some-layout",id:"get-started/test-drive/add-some-layout",title:"Add Some Layout",description:"Avalonia provides a range of built-in controls to help you layout the visual elements of an application. On this page you will see how to use some of these layout controls.",source:"@site/docs/get-started/test-drive/add-some-layout.md",sourceDirName:"get-started/test-drive",slug:"/get-started/test-drive/add-some-layout",permalink:"/avalonia-docs/docs/next/get-started/test-drive/add-some-layout",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/get-started/test-drive/add-some-layout.md",tags:[],version:"current",frontMatter:{id:"add-some-layout",title:"Add Some Layout"},sidebar:"documentationSidebar",previous:{title:"Add a Control",permalink:"/avalonia-docs/docs/next/get-started/test-drive/add-a-control"},next:{title:"Input Controls",permalink:"/avalonia-docs/docs/next/get-started/test-drive/input-controls"}},s={},c=[{value:"Stack Panel",id:"stack-panel",level:2},{value:"Text Block",id:"text-block",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Avalonia provides a range of built-in controls to help you layout the visual elements of an application. On this page you will see how to use some of these layout controls."),(0,a.kt)("p",null,"At this stage, your application has a single button located in the content zone of the main window."),(0,a.kt)("p",null,"In fact an Avalonia window allows only a single other control in its content zone. So to add the multiple visual elements required for most applications, you will need to use one of the built-in layout controls that allows multiple other controls inside its content zone."),(0,a.kt)("h2",{id:"stack-panel"},"Stack Panel"),(0,a.kt)("p",null,"The stack panel control allows multiple controls in its content zone, and arranges them in a vertical stack in the sequence they are defined in the XAML."),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"/img/get-started/add-some-layout/image (40) (1) (1).png",alt:""})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<StackPanel>\n    <TextBlock>1</TextBlock>\n    <TextBlock>2</TextBlock>\n</StackPanel>\n")),(0,a.kt)("h2",{id:"text-block"},"Text Block"),(0,a.kt)("p",null,"The text block control gives you full control over the styling of the text it contains."),(0,a.kt)("p",null,"To take the example forwards, add a stack panel as follows (you can include the existing the button XAML)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<StackPanel>\n    <Border Margin="5" \n      CornerRadius="10"\n      Background="LightBlue">\n      <TextBlock Margin="5"\n         FontSize="24" \n         HorizontalAlignment="Center"\n         Text="Temperature Converter">\n      </TextBlock>\n    </Border>\n    <StackPanel>\n    </StackPanel>    \n    <Button HorizontalAlignment="Center">Calculate</Button>\n  </StackPanel>\n')),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"/img/get-started/add-some-layout/image (41) (1).png",alt:""})),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can explore the other layout controls in Avalonia from the reference ",(0,a.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/next/reference/controls/layout-controls"},"here"),".")),(0,a.kt)("p",null,"On the next page, you will add some inputs to the middle of the window."))}p.isMDXComponent=!0}}]);