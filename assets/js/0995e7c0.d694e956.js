"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[53468],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=i,d=p["".concat(l,".").concat(f)]||p[f]||u[f]||r;return n?a.createElement(d,o(o({ref:t},m),{},{components:n})):a.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},77509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={id:"animations",title:"Animations"},o="Animations",s={unversionedId:"basics/user-interface/animations",id:"basics/user-interface/animations",title:"Animations",description:"There are two types of animations in Avalonia UI:",source:"@site/docs/basics/user-interface/animations.md",sourceDirName:"basics/user-interface",slug:"/basics/user-interface/animations",permalink:"/avalonia-docs/docs/next/basics/user-interface/animations",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/basics/user-interface/animations.md",tags:[],version:"current",frontMatter:{id:"animations",title:"Animations"},sidebar:"documentationSidebar",previous:{title:"Assets and Images",permalink:"/avalonia-docs/docs/next/basics/user-interface/assets"},next:{title:"File Dialogs",permalink:"/avalonia-docs/docs/next/basics/user-interface/file-dialogs"}},l={},c=[{value:"Keyframe Animation",id:"keyframe-animation",level:2},{value:"Triggering Animations",id:"triggering-animations",level:2},{value:"Other Animation Settings",id:"other-animation-settings",level:2}],m={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"animations"},"Animations"),(0,i.kt)("p",null,"There are two types of animations in ",(0,i.kt)("em",{parentName:"p"},"Avalonia UI"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Keyframe Animation -  can change one or more property values using a timeline. Keyframes are defined along the timeline at cue points. The properties being changed are adjusted between keyframes using an easing function (which is a straight-line interpolation by default). Keyframe animations are a very versatile type of animation."),(0,i.kt)("li",{parentName:"ul"},"Transitions - can change a single property.")),(0,i.kt)("h2",{id:"keyframe-animation"},"Keyframe Animation"),(0,i.kt)("p",null,"The simplest keyframe animation will change one property value over a a specified duration by defining two keyframes with cue points at the start (0% of the duration) and the end (100% of the duration)."," "),(0,i.kt)("img",{src:"/img/gitbook-import/assets/image (2) (1) (4).png",alt:""}),(0,i.kt)("p",null,"The property value is then changed over time between the keyframes using the profile defined by an easing function. The default easing function is also the simplest - a straight-line interpolation between two keyframes."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You can see the full range of easing functions in the reference, ",(0,i.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/next/reference/animation-settings"},"here"),".")),(0,i.kt)("h2",{id:"triggering-animations"},"Triggering Animations"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Avalonia UI")," animations defined in XAML rely on selectors for their triggering behavior. Selectors can always apply to a control, or they can conditionally apply (for example if the control has a style class applied)."),(0,i.kt)("p",null,"If the selector is not conditional then the animation will be triggered when a matching ",(0,i.kt)("inlineCode",{parentName:"p"},"Control")," is spawned into the visual tree. Otherwise, the animations will run whenever its selector is activated. When the selector no longer matches, the currently running animation will be cancelled."),(0,i.kt)("h2",{id:"other-animation-settings"},"Other Animation Settings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Delay"),(0,i.kt)("li",{parentName:"ul"},"Repeat"),(0,i.kt)("li",{parentName:"ul"},"Playback Direction"),(0,i.kt)("li",{parentName:"ul"},"Value Fill Mode"),(0,i.kt)("li",{parentName:"ul"},"Easing Function")))}u.isMDXComponent=!0}}]);