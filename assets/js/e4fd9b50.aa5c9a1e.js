"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[2376],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>h});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),m=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=m(e.components);return n.createElement(d.Provider,{value:a},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(t),c=r,h=s["".concat(d,".").concat(c)]||s[c]||u[c]||l;return t?n.createElement(h,i(i({ref:a},p),{},{components:t})):n.createElement(h,i({ref:a},p))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var d in a)hasOwnProperty.call(a,d)&&(o[d]=a[d]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},14463:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=t(87462),r=(t(67294),t(3905));const l={id:"datagridcolumns",title:"DataGridColumns"},i=void 0,o={unversionedId:"controls/datagrid/datagridcolumns",id:"version-0.10.x/controls/datagrid/datagridcolumns",title:"DataGridColumns",description:"Overview",source:"@site/versioned_docs/version-0.10.x/controls/datagrid/datagridcolumns.md",sourceDirName:"controls/datagrid",slug:"/controls/datagrid/datagridcolumns",permalink:"/avalonia-docs/docs/controls/datagrid/datagridcolumns",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/controls/datagrid/datagridcolumns.md",tags:[],version:"0.10.x",frontMatter:{id:"datagridcolumns",title:"DataGridColumns"},sidebar:"documentationSidebar",previous:{title:"DataGrid",permalink:"/avalonia-docs/docs/controls/datagrid/"},next:{title:"DatePicker",permalink:"/avalonia-docs/docs/controls/datepicker"}},d={},m=[{value:"Overview",id:"overview",level:2},{value:"Build-in DataGridColumns",id:"build-in-datagridcolumns",level:3},{value:"Common Properties for all DataGridColumns",id:"common-properties-for-all-datagridcolumns",level:3},{value:"DataGridTextColumn",id:"datagridtextcolumn",level:2},{value:"Example",id:"example",level:3},{value:"API Reference",id:"api-reference",level:3},{value:"Source code",id:"source-code",level:3},{value:"DataGridCheckBoxColumn",id:"datagridcheckboxcolumn",level:2},{value:"Example",id:"example-1",level:3},{value:"API Reference",id:"api-reference-1",level:3},{value:"Source code",id:"source-code-1",level:3},{value:"DataGridTemplateColumn",id:"datagridtemplatecolumn",level:2},{value:"Example",id:"example-2",level:3},{value:"API Reference",id:"api-reference-2",level:3},{value:"Source code",id:"source-code-2",level:3}],p={toc:m},s="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(s,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Every ",(0,r.kt)("a",{parentName:"p",href:"./",title:"mention"},".")," can hold multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"DataGridColumns"),". Avalonia has several build-in ",(0,r.kt)("inlineCode",{parentName:"p"},"DataGridColumns"),", which can be used to display a certain data type with a certain appearance."," "),(0,r.kt)("h3",{id:"build-in-datagridcolumns"},"Build-in DataGridColumns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/avalonia-docs/docs/controls/datagrid/datagridcolumns#datagridtextcolumn"},"DataGridTextColumn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/avalonia-docs/docs/controls/datagrid/datagridcolumns#datagridcheckboxcolumn"},"DataGridCheckBoxColumn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/avalonia-docs/docs/controls/datagrid/datagridcolumns#datagridtemplatecolumn"},"DataGridTemplateColumn"))),(0,r.kt)("h3",{id:"common-properties-for-all-datagridcolumns"},"Common Properties for all DataGridColumns"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Header"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets or sets the header content of the column")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HeaderTemplate"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets or sets a data template for the column (see: ",(0,r.kt)("a",{parentName:"td",href:"../../templates/data-templates"},"datatemplates.md"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"IsReadOnly"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets or sets if the column is read-only. If the owning grid is read-only, then the column is also read-only, even if this property is set to true.")))),(0,r.kt)("h2",{id:"datagridtextcolumn"},"DataGridTextColumn"),(0,r.kt)("p",null,"This column is used to display text data, normally represented by a ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),". In the normal state the text is displayed in a ",(0,r.kt)("inlineCode",{parentName:"p"},"TextBlock"),". If the user edits the current cell, a ",(0,r.kt)("inlineCode",{parentName:"p"},"TextBox")," will be shown. This column has some properties which can be used to control the appearance like ",(0,r.kt)("inlineCode",{parentName:"p"},"FontSize")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"FontFamily"),"."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<DataGrid Name="MyDataGrid" Items="{Binding People}" AutoGenerateColumns="False" >\n    <DataGrid.Columns>\n        <DataGridTextColumn Header="Forename" Binding="{Binding FirstName}"/>\n        <DataGridTextColumn Header="Surname" Binding="{Binding LastName}" />\n    </DataGrid.Columns>\n</DataGrid>\n')),(0,r.kt)("h3",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGridTextColumn/"},"DataGridTextColumn")),(0,r.kt)("h3",{id:"source-code"},"Source code"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGridTextColumn.cs"},"DataGridTextColumn.cs")),(0,r.kt)("h2",{id:"datagridcheckboxcolumn"},"DataGridCheckBoxColumn"),(0,r.kt)("p",null,"This column is used to represent a ",(0,r.kt)("inlineCode",{parentName:"p"},"bool")," value. The  value is represented by a ",(0,r.kt)("inlineCode",{parentName:"p"},"CheckBox"),", which is disabled in the normal state and enabled in the editing state of the ",(0,r.kt)("inlineCode",{parentName:"p"},"DataGridCell"),". If needed you can enable the indeterminate state by setting the property ",(0,r.kt)("inlineCode",{parentName:"p"},"IsThreeState")," to true."),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<DataGrid Name="MyDataGrid" Items="{Binding ToDoListItems}" AutoGenerateColumns="False" >\n    <DataGrid.Columns>\n        <DataGridCheckBoxColumn Header="\u2714" Binding="{Binding IsChecked}"/>\n        <DataGridTextColumn Header="ToDo" Binding="{Binding Content}" />\n    </DataGrid.Columns>\n</DataGrid>\n')),(0,r.kt)("h3",{id:"api-reference-1"},"API Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGridCheckBoxColumn/"},"DataGridCheckBoxColumn")),(0,r.kt)("h3",{id:"source-code-1"},"Source code"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGridCheckBoxColumn.cs"},"DataGridCheckBoxColumn.cs")),(0,r.kt)("h2",{id:"datagridtemplatecolumn"},"DataGridTemplateColumn"),(0,r.kt)("p",null,"This column is used to display any content you like. There  are two ",(0,r.kt)("a",{parentName:"p",href:"../../templates/data-templates"},"datatemplates.md")," which you can define, the ",(0,r.kt)("inlineCode",{parentName:"p"},"CellTemplate")," for the normal state and the ",(0,r.kt)("inlineCode",{parentName:"p"},"CellEditingTemplate")," for the editing state of the current ",(0,r.kt)("inlineCode",{parentName:"p"},"DataGridCell"),"."," "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The DataGridTemplateColumn is editable from Avalonia version 0.10.12 onward. If you do not set a ",(0,r.kt)("inlineCode",{parentName:"p"},"CellEditingTemplate"),", the column will stay read-only.")),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<DataGrid Name="MyDataGrid"\n          xmlns:model="using:MyApp.Models"  >\n  <DataGrid.Columns>\n    <DataGridTextColumn Header="First Name" Binding="{Binding FirstName}" Width="2*" FontSize="{Binding #FontSizeSlider.Value, Mode=OneWay}" />\n    <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" Width="2*" FontSize="{Binding #FontSizeSlider.Value, Mode=OneWay}" />\n    <DataGridTemplateColumn Header="Age">\n      <DataGridTemplateColumn.CellTemplate>\n        <DataTemplate DataType="model:Person">\n          <TextBlock Text="{Binding Age, StringFormat=\'{}{0} years\'}" VerticalAlignment="Center" HorizontalAlignment="Center" />\n        </DataTemplate>\n      </DataGridTemplateColumn.CellTemplate>\n      <DataGridTemplateColumn.CellEditingTemplate>\n        <DataTemplate DataType="model:Person">\n          <NumericUpDown Value="{Binding Age}" FormatString="N0" HorizontalAlignment="Stretch" Minimum="0" Maximum="120"  />\n        </DataTemplate>\n      </DataGridTemplateColumn.CellEditingTemplate>\n    </DataGridTemplateColumn>\n  </DataGrid.Columns>\n</DataGrid>\n')),(0,r.kt)("h3",{id:"api-reference-2"},"API Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGridTemplateColumn/"},"DataGridTemplateColumn")),(0,r.kt)("h3",{id:"source-code-2"},"Source code"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGridTemplateColumn.cs"},"DataGridTemplateColumn.cs")))}u.isMDXComponent=!0}}]);