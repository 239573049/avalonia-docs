"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[53857],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={description:"CONCEPTS"},i="Control Trees",l={unversionedId:"concepts/control-trees",id:"concepts/control-trees",title:"Control Trees",description:"CONCEPTS",source:"@site/docs/concepts/control-trees.md",sourceDirName:"concepts",slug:"/concepts/control-trees",permalink:"/avalonia-docs/docs/next/concepts/control-trees",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/control-trees.md",tags:[],version:"current",frontMatter:{description:"CONCEPTS"},sidebar:"documentationSidebar",previous:{title:"Attached Properties",permalink:"/avalonia-docs/docs/next/concepts/attached-property"},next:{title:"Control Content",permalink:"/avalonia-docs/docs/next/concepts/templates/data-templates"}},c={},s=[{value:"Logical Tree",id:"logical-tree",level:2},{value:"Visual Tree ",id:"visual-tree-",level:2},{value:"Events ",id:"events-",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"control-trees"},"Control Trees"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," creates control trees from the XAML files in an application so that it can render the UI presentation and manage the application functionality.  "," "),(0,o.kt)("h2",{id:"logical-tree"},"Logical Tree"),(0,o.kt)("p",null,"The logical control tree represents the application controls (including the main window) in the hierarchy in which they are defined in the XAML. For example: and control (button) inside another control (stack panel) in a window will have the 3-layer logical tree shown here:"),(0,o.kt)("img",{src:"/img/gitbook-import/assets/image (61).png",alt:""}),(0,o.kt)("p",null,"While your application is running, you can show the ",(0,o.kt)("em",{parentName:"p"},"Avalonia Dev Tools")," window (hit F12). This displays the logical tree on its ",(0,o.kt)("strong",{parentName:"p"},"Logical Tree")," tab."),(0,o.kt)("h2",{id:"visual-tree-"},"Visual Tree"," "),(0,o.kt)("p",null,"The visual control tree contains everything that is actually being run by ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI"),". It shows all the properties set on the controls, and all the additional parts that have been added by ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," in order to present the UI and manage the application functionality. "," "),(0,o.kt)("img",{src:"/img/gitbook-import/assets/image (15) (2).png",alt:""}),(0,o.kt)("p",null,"You can see the visual control tree on the ",(0,o.kt)("strong",{parentName:"p"},"Visual Tree")," tab of the ",(0,o.kt)("em",{parentName:"p"},"Avalonia Dev Tools")," window."),(0,o.kt)("h2",{id:"events-"},"Events"," "),(0,o.kt)("p",null,"An essential part of application functionality management performed by ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI"),", is the generation and propagation of events. The ",(0,o.kt)("strong",{parentName:"p"},"Events")," tab logs the source and propagation of events as you move around, and otherwise interact with the running application."),(0,o.kt)("img",{src:"/img/gitbook-import/assets/image (1) (1) (2).png",alt:""}))}d.isMDXComponent=!0}}]);