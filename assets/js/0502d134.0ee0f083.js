"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[9974],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(i,".").concat(d)]||m[d]||h[d]||a;return n?o.createElement(k,c(c({ref:t},p),{},{components:n})):o.createElement(k,c({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:r,c[1]=l;for(var s=2;s<a;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},16184:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={id:"checkbox",title:"CheckBox"},c=void 0,l={unversionedId:"controls/checkbox",id:"version-0.10.x/controls/checkbox",title:"CheckBox",description:"The CheckBox control is a ContentControl which allows user to check an option. It is usually used to display a boolean option where selection is either checked or unchecked. But it also supports three state mode where selection is either checked, indeterminate or unchecked.",source:"@site/versioned_docs/version-0.10.x/controls/checkbox.md",sourceDirName:"controls",slug:"/controls/checkbox",permalink:"/avalonia-docs/docs/controls/checkbox",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/controls/checkbox.md",tags:[],version:"0.10.x",frontMatter:{id:"checkbox",title:"CheckBox"},sidebar:"documentationSidebar",previous:{title:"Carousel",permalink:"/avalonia-docs/docs/controls/carousel"},next:{title:"ComboBox",permalink:"/avalonia-docs/docs/controls/combobox"}},i={},s=[{value:"Common Properties",id:"common-properties",level:2},{value:"Reference",id:"reference",level:2},{value:"Source code",id:"source-code",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic checkbox",id:"basic-checkbox",level:3},{value:"Three state checkbox",id:"three-state-checkbox",level:3}],p={toc:s},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CheckBox")," control is a ",(0,r.kt)("a",{parentName:"p",href:"../controls/contentcontrol"},(0,r.kt)("inlineCode",{parentName:"a"},"ContentControl"))," which allows user to check an option. It is usually used to display a boolean option where selection is either ",(0,r.kt)("em",{parentName:"p"},"checked")," or ",(0,r.kt)("em",{parentName:"p"},"unchecked"),". But it also supports three state mode where selection is either ",(0,r.kt)("em",{parentName:"p"},"checked"),", ",(0,r.kt)("em",{parentName:"p"},"indeterminate")," or ",(0,r.kt)("em",{parentName:"p"},"unchecked"),"."),(0,r.kt)("h2",{id:"common-properties"},"Common Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IsChecked")),(0,r.kt)("td",{parentName:"tr",align:null},"Is ",(0,r.kt)("inlineCode",{parentName:"td"},"CheckBox")," checked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IsThreeState")),(0,r.kt)("td",{parentName:"tr",align:null},"Is ",(0,r.kt)("inlineCode",{parentName:"td"},"CheckBox")," in three state mode")))),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/CheckBox/"},"Checkbox")),(0,r.kt)("h2",{id:"source-code"},"Source code"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/CheckBox.cs"},"CheckBox.cs")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"basic-checkbox"},"Basic checkbox"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="CheckBox sample">\n    <StackPanel>\n        <CheckBox>Not checked by default</CheckBox>\n        <CheckBox IsChecked="True">Checked by default</CheckBox>\n    </StackPanel>\n</Window>\n')),(0,r.kt)("p",null,"produces following output with ",(0,r.kt)("strong",{parentName:"p"},"Windows 10"),"\\"),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/controls/checkbox/checkbox_basic.png",alt:"Basic checkbox"})),(0,r.kt)("h3",{id:"three-state-checkbox"},"Three state checkbox"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaAppTemplate.MainWindow"\n        Title="CheckBox sample">\n    <StackPanel>\n        <CheckBox IsThreeState="True" IsChecked="False">Not checked by default</CheckBox>\n        <CheckBox IsThreeState="True" IsChecked="True">Checked by default</CheckBox>\n        <CheckBox IsThreeState="True" IsChecked="{x:Null}">Indeterminate by default</CheckBox>\n    </StackPanel>\n</Window>\n')),(0,r.kt)("p",null,"produces following output with ",(0,r.kt)("strong",{parentName:"p"},"Windows 10"),"\\"),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/controls/checkbox/checkbox_threestate.png",alt:"Three state checkbox"})))}h.isMDXComponent=!0}}]);