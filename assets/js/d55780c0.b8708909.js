"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[59058],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,v=d["".concat(p,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(v,i(i({ref:t},u),{},{components:n})):r.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64073:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={description:"CONCEPTS - ReactiveUI"},i="Command Update",c={unversionedId:"concepts/reactiveui/command-update",id:"concepts/reactiveui/command-update",title:"Command Update",description:"CONCEPTS - ReactiveUI",source:"@site/docs/concepts/reactiveui/command-update.md",sourceDirName:"concepts/reactiveui",slug:"/concepts/reactiveui/command-update",permalink:"/avalonia-docs/docs/next/concepts/reactiveui/command-update",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/reactiveui/command-update.md",tags:[],version:"current",frontMatter:{description:"CONCEPTS - ReactiveUI"},sidebar:"documentationSidebar",previous:{title:"Reactive View Model",permalink:"/avalonia-docs/docs/next/concepts/reactiveui/reactive-view-model"},next:{title:"Reactive Command",permalink:"/avalonia-docs/docs/next/concepts/reactiveui/reactive-command"}},p={},l=[],u={toc:l},d="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"command-update"},"Command Update"),(0,o.kt)("p",null,"This page introduces how you can use Avalonia UI binding to initiate changes on a view model from controls like buttons that have a ",(0,o.kt)("inlineCode",{parentName:"p"},"Command")," attribute."),(0,o.kt)("p",null,"For example, you can use this view model with an action defined in the method ",(0,o.kt)("inlineCode",{parentName:"p"},"ButtonAction"),":"," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'public class MainWindowViewModel : ViewModelBase\n{\n    private string _greeting = "Welcome to Avalonia!";\n\n    public string Greeting\n    {\n        get => _greeting;\n        set => this.RaiseAndSetIfChanged(ref _greeting,  value);\n    }\n\n    public void ButtonAction()\n    {\n        Greeting = "Another greeting from Avalonia";\n    }\n}\n')),(0,o.kt)("p",null,"Then in the corresponding XAML define two controls:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'<TextBlock Text="{Binding Greeting}" />\n<Button Command="{Binding ButtonAction}" >Change It</Button>\n')),(0,o.kt)("p",null,"This means that when the user clicks the button, ",(0,o.kt)("em",{parentName:"p"},"Avalonia UI")," updates the view model by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"ButtonAction")," method. This changes the ",(0,o.kt)("inlineCode",{parentName:"p"},"Greeting")," property using the setter, so in turn the new greeting text is notified back to the text control on the UI."))}s.isMDXComponent=!0}}]);