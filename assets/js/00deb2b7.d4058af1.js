"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[75018],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>w});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),u=i,w=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return n?o.createElement(w,a(a({ref:t},d),{},{components:n})):o.createElement(w,a({ref:t},d))}));function w(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:i,a[1]=p;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=n(87462),i=(n(67294),n(3905));const r={id:"how-to-show-and-hide-a-split-view-pane-with-mvvm",title:"How To Show and Hide a Split View Pane with MVVM"},a="How To Show and Hide a Split View Pane with MVVM",p={unversionedId:"guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm",id:"guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm",title:"How To Show and Hide a Split View Pane with MVVM",description:"Content in preparation.",source:"@site/docs/guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm.md",sourceDirName:"guides/development-guides",slug:"/guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm",permalink:"/avalonia-docs/docs/next/guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm.md",tags:[],version:"current",frontMatter:{id:"how-to-show-and-hide-a-split-view-pane-with-mvvm",title:"How To Show and Hide a Split View Pane with MVVM"},sidebar:"documentationSidebar",previous:{title:"How To Implement Multi-page Apps",permalink:"/avalonia-docs/docs/next/guides/development-guides/how-to-implement-multi-page-apps"},next:{title:"Improving Performance",permalink:"/avalonia-docs/docs/next/guides/development-guides/improving-performance"}},l={},s=[],d={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-show-and-hide-a-split-view-pane-with-mvvm"},"How To Show and Hide a Split View Pane with MVVM"),(0,i.kt)("p",null,"Content in preparation."),(0,i.kt)("p",null,"You can use the MVVM pattern with the split view control to implement a 'tool pane' style UI."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This technique uses a complex ",(0,i.kt)("strong",{parentName:"p"},"binding path")," to locate the parent view model for the "," ")),(0,i.kt)("p",null,"TO DO"),(0,i.kt)("img",{src:"/img/gitbook-import/assets/splitview2.gif",alt:""}))}m.isMDXComponent=!0}}]);