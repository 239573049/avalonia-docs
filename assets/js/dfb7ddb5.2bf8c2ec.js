"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[49168],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={id:"how-to-bind-to-a-task-result",title:"How to Bind to a Task Result"},i="How to Bind to a Task Result",s={unversionedId:"guides/data-binding/how-to-bind-to-a-task-result",id:"guides/data-binding/how-to-bind-to-a-task-result",title:"How to Bind to a Task Result",description:"Content in preparation.",source:"@site/docs/guides/data-binding/how-to-bind-to-a-task-result.md",sourceDirName:"guides/data-binding",slug:"/guides/data-binding/how-to-bind-to-a-task-result",permalink:"/avalonia-docs/docs/next/guides/data-binding/how-to-bind-to-a-task-result",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/data-binding/how-to-bind-to-a-task-result.md",tags:[],version:"current",frontMatter:{id:"how-to-bind-to-a-task-result",title:"How to Bind to a Task Result"},sidebar:"documentationSidebar",previous:{title:"How to Bind to a Command without ReactiveUI",permalink:"/avalonia-docs/docs/next/guides/data-binding/how-to-bind-to-a-command-without-reactiveui"},next:{title:"How To Bind to an Observable",permalink:"/avalonia-docs/docs/next/guides/data-binding/how-to-bind-to-an-observable"}},l={},d=[{value:"Example 2: Binding to a task",id:"example-2-binding-to-a-task",level:2}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-bind-to-a-task-result"},"How to Bind to a Task Result"),(0,o.kt)("p",null,"Content in preparation."),(0,o.kt)("h2",{id:"example-2-binding-to-a-task"},"Example 2: Binding to a task"),(0,o.kt)("p",null,"If you need to do some heavy work to load the content of a property you can bind to the result of an ",(0,o.kt)("inlineCode",{parentName:"p"},"async Task<TResult>")),(0,o.kt)("p",null,"Consider you have the following view model which generates some text in a long running process:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'public Task<string> MyAsyncText => GetTextAsync();\n\nprivate async Task<string> GetTextAsync()\n{\n  await Task.Delay(1000); // The delay is just for demonstration purpose\n  return "Hello from async operation";\n}\n')),(0,o.kt)("p",null,"You can bind to the result in the following way:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},"<TextBlock Text=\"{Binding MyAsyncText^, FallbackValue='Wait a second'}\" />\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Note: You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"FallbackValue")," to display some loading indicator.")))}p.isMDXComponent=!0}}]);