"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[40727],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(g,i(i({ref:t},c),{},{components:r})):a.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85595:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={id:"progressbar",title:"ProgressBar"},i=void 0,l={unversionedId:"controls/progressbar",id:"version-0.10.x/controls/progressbar",title:"ProgressBar",description:"The ProgressBar control allow for showing dynamic progress status.",source:"@site/versioned_docs/version-0.10.x/controls/progressbar.md",sourceDirName:"controls",slug:"/controls/progressbar",permalink:"/avalonia-docs/docs/controls/progressbar",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/controls/progressbar.md",tags:[],version:"0.10.x",frontMatter:{id:"progressbar",title:"ProgressBar"},sidebar:"documentationSidebar",previous:{title:"Panel",permalink:"/avalonia-docs/docs/controls/panel"},next:{title:"RelativePanel",permalink:"/avalonia-docs/docs/controls/relativepanel"}},s={},p=[{value:"Customizing the progress text",id:"customizing-the-progress-text",level:3},{value:"Progress Text Format Example",id:"progress-text-format-example",level:4},{value:"Reference",id:"reference",level:3},{value:"Source code",id:"source-code",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"ProgressBar")," control allow for showing dynamic progress status."),(0,n.kt)("h3",{id:"customizing-the-progress-text"},"Customizing the progress text"),(0,n.kt)("p",null,"When ",(0,n.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/ProgressBar/590A8B3E"},(0,n.kt)("inlineCode",{parentName:"a"},"ShowProgressText"))," is ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", text on the progress bar will be displayed."),(0,n.kt)("div",{style:{textAlign:"center"}},(0,n.kt)("img",{src:"/img/controls/progressbar/progressbar (1).png",alt:"Basic Progress Bar"})),(0,n.kt)("p",null,"By default this text shows the percentage completion, according to the ",(0,n.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls.Primitives/RangeBase/E111DF5B"},(0,n.kt)("inlineCode",{parentName:"a"},"Value")),", ",(0,n.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls.Primitives/RangeBase/8F9BD1EA"},(0,n.kt)("inlineCode",{parentName:"a"},"Minimum"))," and ",(0,n.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls.Primitives/RangeBase/C07B22E9"},(0,n.kt)("inlineCode",{parentName:"a"},"Maximum")),". The format of this text can be customised by using the ",(0,n.kt)("inlineCode",{parentName:"p"},"ProgressTextFormat")," property. This expects a string which will be passed to a ",(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string.format#system-string-format(system-string-system-object())"},(0,n.kt)("inlineCode",{parentName:"a"},"string.Format"))," call with the value of ",(0,n.kt)("inlineCode",{parentName:"p"},"ProgressTextFormat")," as the format string. The following format items are available at the given indices:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"0 = Value"),(0,n.kt)("li",{parentName:"ul"},"1 = Value as a Percentage from 0 to 100 (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Minimum = 0"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Maximum = 50"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Value = 25"),", then ",(0,n.kt)("inlineCode",{parentName:"li"},"Percentage = 50"),")"),(0,n.kt)("li",{parentName:"ul"},"2 = Minimum"),(0,n.kt)("li",{parentName:"ul"},"3 = Maximum")),(0,n.kt)("h4",{id:"progress-text-format-example"},"Progress Text Format Example"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Min"),(0,n.kt)("th",{parentName:"tr",align:null},"Max"),(0,n.kt)("th",{parentName:"tr",align:null},"Value"),(0,n.kt)("th",{parentName:"tr",align:null},"Format String"),(0,n.kt)("th",{parentName:"tr",align:null},"Output"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0"),(0,n.kt)("td",{parentName:"tr",align:null},"20"),(0,n.kt)("td",{parentName:"tr",align:null},"17"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"{0}/{3} Tasks Complete ({1:0}%)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"17/20 Tasks Complete (85%)"))))),(0,n.kt)("h3",{id:"reference"},"Reference"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/ProgressBar/"},"ProgressBar")),(0,n.kt)("h3",{id:"source-code"},"Source code"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/ProgressBar.cs"},"ProgressBar.cs")))}u.isMDXComponent=!0}}]);