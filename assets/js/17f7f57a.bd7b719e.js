"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[52369],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=o,f=d["".concat(c,".").concat(h)]||d[h]||u[h]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},70653:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const i={id:"scrollviewer",title:"ScrollViewer"},a=void 0,l={unversionedId:"controls/scrollviewer",id:"version-0.10.x/controls/scrollviewer",title:"ScrollViewer",description:"The ScrollViewer control scrolls its content if the content is bigger than the space available. A ScrollViewer cannot be contained in a control that has infinite height or width (depending on scrolling direction) such as a StackPanel. To avoid it, you can either set fixed Height/Width or MaxHeight/MaxWidth or choose another container panel.",source:"@site/versioned_docs/version-0.10.x/controls/scrollviewer.md",sourceDirName:"controls",slug:"/controls/scrollviewer",permalink:"/avalonia-docs/docs/controls/scrollviewer",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/controls/scrollviewer.md",tags:[],version:"0.10.x",frontMatter:{id:"scrollviewer",title:"ScrollViewer"},sidebar:"documentationSidebar",previous:{title:"ScrollBar",permalink:"/avalonia-docs/docs/controls/scrollbar"},next:{title:"Separator",permalink:"/avalonia-docs/docs/controls/separator"}},c={},s=[{value:"ScrollChaining",id:"scrollchaining",level:2},{value:"Reference",id:"reference",level:2},{value:"Source code",id:"source-code",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer")," control scrolls its content if the content is bigger than the space available. A ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer")," cannot be contained in a control that has infinite height or width (depending on scrolling direction) such as a ",(0,o.kt)("inlineCode",{parentName:"p"},"StackPanel"),". To avoid it, you can either set fixed Height/Width or MaxHeight/MaxWidth or choose another container panel."),(0,o.kt)("h2",{id:"scrollchaining"},"ScrollChaining"),(0,o.kt)("p",null,"If you have one ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer")," nested inside another ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer")," and the user hits any limit of the inner ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer"),", you can specify if the parent ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer")," should continue with the scroll event or not. You can enable or disable this behavior with the attached property ",(0,o.kt)("inlineCode",{parentName:"p"},"ScrollViewer.IsScrollChainingEnabled=[true|false]"),". The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),". "),(0,o.kt)("p",null,"This property is available from these Controls: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ScrollViewer"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./datagrid"},"DataGrid")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./listbox"},"ListBox")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./textbox"},"TextBox")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./treeview"},"TreeView"))),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/ScrollViewer/"},"ScrollViewer")),(0,o.kt)("h2",{id:"source-code"},"Source code"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/ScrollViewer.cs"},"ScrollViewer.cs")))}u.isMDXComponent=!0}}]);